<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Assign_Generate_Invoice</name>
        <label>Assign Generate Invoice</label>
        <locationX>380</locationX>
        <locationY>323</locationY>
        <assignmentItems>
            <assignToReference>IsGenerateInvoice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.GenerateInvoice__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AmountValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Amount__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>quantityValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Quantity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Decription</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>getUnitRecordType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignmentQuantity</name>
        <label>AssignmentQuantity</label>
        <locationX>138</locationX>
        <locationY>1403</locationY>
        <assignmentItems>
            <assignToReference>TotalQuantity</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopQuantity.Quantity</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopQuantity</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Getting_Picklist_Value</name>
        <label>Getting Picklist Value</label>
        <locationX>380</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>PicklistValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Type__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CheckParent</targetReference>
        </connector>
    </assignments>
    <constants>
        <name>chilUnitName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Unit Request Test</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Check_unit_request_exists</name>
        <label>Check unit request exists</label>
        <locationX>182</locationX>
        <locationY>1187</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Unit_requests_exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetChildRecordsToUpdateQuantity</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopQuantity</targetReference>
            </connector>
            <label>Unit requests exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckParent</name>
        <label>Decision: Check Parent</label>
        <locationX>380</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>UpdateUnit</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Decision Outcome: Parent Not Found</defaultConnectorLabel>
        <rules>
            <name>ParentFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetRecordsGetParentUnit</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateParentId</targetReference>
            </connector>
            <label>Decision Outcome: Parent Found</label>
        </rules>
    </decisions>
    <description>48---duplicate</description>
    <environments>Default</environments>
    <formulas>
        <name>qtyValue</name>
        <dataType>Number</dataType>
        <expression>IF({!IsGenerateInvoice}==true, 0, {!$Record.Quantity})</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>Status</name>
        <dataType>String</dataType>
        <expression>IF ({!IsGenerateInvoice} == true, &apos;Pending Invoice&apos;, &apos;Waived&apos;)</expression>
    </formulas>
    <formulas>
        <name>UnitRequestNameFormat</name>
        <dataType>String</dataType>
        <expression>&quot;UnitRequest-&quot;+{!PicklistValue}+&quot;-&quot;+TEXT(DATEVALUE({!$Record.CreatedDate}))</expression>
    </formulas>
    <interviewLabel>Manage Units After Save {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Manage Units After Save</label>
    <loops>
        <name>LoopQuantity</name>
        <label>LoopQuantity</label>
        <locationX>50</locationX>
        <locationY>1295</locationY>
        <collectionReference>GetChildRecordsToUpdateQuantity</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignmentQuantity</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateParentQuantity</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Child_Unit</name>
        <label>Create Records : Create Child Unit</label>
        <locationX>578</locationX>
        <locationY>1079</locationY>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Amount__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>Capacity__c</field>
            <value>
                <elementReference>$Record.Capacity__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>Decription</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>GenerateInvoice__c</field>
            <value>
                <elementReference>IsGenerateInvoice</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>UnitRequestNameFormat</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Quantity</field>
            <value>
                <elementReference>quantityValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>unitRequestRecordTypeId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <elementReference>Status</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type__c</field>
            <value>
                <elementReference>$Record.Type__c</elementReference>
            </value>
        </inputAssignments>
        <object>Asset</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>GetChildRecordsToUpdateQuantity</name>
        <label>GetChildRecordsToUpdateQuantity</label>
        <locationX>182</locationX>
        <locationY>1079</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_unit_request_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Capacity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Capacity__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Type__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>unitRequestRecordTypeId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Pending Invoice</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Asset</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRecordsGetParentUnit</name>
        <label>Get Records: Get Parent Unit</label>
        <locationX>380</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Getting_Picklist_Value</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>ParentId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Capacity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Capacity__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Type__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>unitRecordTypeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Asset</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Quantity</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>Capacity__c</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>ParentId</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>Type__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getUnitRecordType</name>
        <label>getUnitRecordType</label>
        <locationX>380</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getUnitRequestRecordType</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Asset</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Units_Record_Type</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>unitRecordTypeId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>getUnitRequestRecordType</name>
        <label>getUnitRequestRecordType</label>
        <locationX>380</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetRecordsGetParentUnit</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Asset</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Unit_Request_Record_Type</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>unitRequestRecordTypeId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>UpdateParentId</name>
        <label>UpdateParentId</label>
        <locationX>182</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>GetChildRecordsToUpdateQuantity</targetReference>
        </connector>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>UnitRequestNameFormat</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>GetRecordsGetParentUnit.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>unitRequestRecordTypeId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <elementReference>Status</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateParentQuantity</name>
        <label>UpdateParentQuantity</label>
        <locationX>50</locationX>
        <locationY>1595</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>unitRecordTypeId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Quantity</field>
            <value>
                <elementReference>TotalQuantity</elementReference>
            </value>
        </inputAssignments>
        <object>Asset</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateUnit</name>
        <label>UpdateUnit</label>
        <locationX>578</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>Create_Child_Unit</targetReference>
        </connector>
        <inputAssignments>
            <field>Amount__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
        </inputAssignments>
        <inputAssignments>
            <field>GenerateInvoice__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Quantity</field>
            <value>
                <elementReference>qtyValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>unitRecordTypeId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Assign_Generate_Invoice</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Asset</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <variables>
        <name>AmountValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>Decription</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>IsGenerateInvoice</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>PicklistValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>quantityValue</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>TotalQuantity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>unitRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>unitRequestRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
